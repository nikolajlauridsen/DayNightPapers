<Application x:Class="DayNightPapers.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:DayNightPapers"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Brush x:Key="PrimaryBack">#F5F7FA</Brush>
        <Brush x:Key="SecondaryBack">#C8D1E0</Brush>
        <Brush x:Key="PrimaryFore">#3703B3</Brush>
        <Brush x:Key="PrimaryWarning">#DF2C2B</Brush>

        <Style TargetType="Window" x:Key="WindowStyle">
            <Setter Property="Height" Value="350"></Setter>
            <Setter Property="Width" Value="850"></Setter>
            <Setter Property="Background" Value="{StaticResource PrimaryBack}"></Setter>
            <Setter Property="WindowStyle" Value="ToolWindow"></Setter>
        </Style>

        <Style TargetType="Page" x:Key="PageStyle">
            <Setter Property="Background" Value="{StaticResource PrimaryBack}"></Setter>
        </Style>

        <Style TargetType="Button" x:Key="PrettyButton">
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="Height" Value="35"></Setter>
            <Setter Property="Width" Value="80"></Setter>
            <Setter Property="Margin" Value="10"></Setter>
            <Setter Property="Foreground" Value="{StaticResource PrimaryFore}"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="18" Background="{TemplateBinding Background}" BorderThickness="2" BorderBrush="{StaticResource PrimaryFore}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0,10,4"></ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource SecondaryBack}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="SmallButton">
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="Height" Value="35"></Setter>
            <Setter Property="Width" Value="80"></Setter>
            <Setter Property="Margin" Value="10"></Setter>
            <Setter Property="Foreground" Value="{StaticResource PrimaryFore}"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="11" Background="{TemplateBinding Background}" BorderThickness="2" BorderBrush="{StaticResource PrimaryFore}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0,10,4"></ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource SecondaryBack}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="SettingsButton">
            <Setter Property="Width" Value="30"></Setter>
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
            <!-- <Setter Property="Margin" Value="0,0,-40,0"></Setter> -->

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <!-- I still find it incredibly weird that you must define your own ControlTemplate
                        But hey, at least it gives me a circular hover color which is nice :^) -->
                        <Border CornerRadius="18" Background="{TemplateBinding Background}" BorderThickness="2" BorderBrush="Transparent">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource SecondaryBack}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Label" x:Key="DisplayText">
            <Setter Property="FontSize" Value="150"></Setter>
            <Setter Property="Foreground" Value="{StaticResource PrimaryFore}"></Setter>
        </Style>

        <Style TargetType="TextBox" x:Key="CountDownBox">
            <Setter Property="FontSize" Value="150"></Setter>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="Foreground" Value="{StaticResource PrimaryFore}"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
            <Setter Property="MinWidth" Value="160"></Setter>
            <Setter Property="CaretBrush" Value="{StaticResource PrimaryFore}"></Setter>
            <Setter Property="TextAlignment" Value="Center"></Setter>

        </Style>

        <Style TargetType="Label" x:Key="SmallText">
            <Setter Property="FontSize" Value="14"></Setter>
            <Setter Property="Foreground" Value="{StaticResource PrimaryFore}"></Setter>
        </Style>

        <Style TargetType="TextBlock" x:Key="PrettyBlock">
            <Setter Property="FontSize" Value="14"></Setter>
            <Setter Property="Foreground" Value="{StaticResource PrimaryFore}"></Setter>
        </Style>

        <Style x:Key="DropDown" TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="{StaticResource PrimaryFore}"></Setter>
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="Width" Value="50"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                                <ToggleButton.Template>
                                    <ControlTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="5*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="Border"  Grid.ColumnSpan="2" CornerRadius="5" Background="{StaticResource PrimaryFore}" BorderBrush="{StaticResource PrimaryFore}" BorderThickness="1" />
                                            <Border Grid.Column="0" CornerRadius="5,0,0,5"  Margin="1"  Background="{StaticResource PrimaryBack}"  BorderBrush="{StaticResource PrimaryFore}" BorderThickness="0,0,1,0" />
                                            <Path x:Name="Arrow" Grid.Column="1"  Fill="{StaticResource PrimaryBack}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PrimaryFore}" />
                                            </Trigger>
                                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PrimaryBack}" />
                                                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource PrimaryFore}"></Setter>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="-6,3,3,3"  />
                            <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                                <Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="{StaticResource PrimaryFore}" />
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <Style x:Key="TextInput" TargetType="TextBox">
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="Foreground" Value="{StaticResource PrimaryFore}"></Setter>
            <Setter Property="Width" Value="40"></Setter>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="CaretBrush" Value="{StaticResource PrimaryFore}"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border Background="{TemplateBinding Background}" 
                                x:Name="Bd" BorderBrush="{StaticResource PrimaryFore}"
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="6">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="Width" Value="Auto">
                                <Setter Property="MinWidth" Value="100"/>
                            </Trigger>
                            <Trigger Property="Height" Value="Auto">
                                <Setter Property="MinHeight" Value="20"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FancyCheck" TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" Width="15" Height="15" CornerRadius="0" Background="Transparent" BorderThickness="1" BorderBrush="{StaticResource PrimaryFore}">
                                    <Path Width="7" Height="7" x:Name="CheckMark" SnapsToDevicePixels="False"  Stroke="{StaticResource PrimaryFore}" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                                </Border>
                            </BulletDecorator.Bullet>

                            <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                        </BulletDecorator>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource SecondaryBack}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PrimaryFore}" />
                                <Setter TargetName="CheckMark" Property="Stroke" Value="{StaticResource PrimaryBack}"></Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <!-- Not used for now -->
                                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
